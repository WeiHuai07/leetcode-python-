class Solution:
    def minDepth(self, root: TreeNode) -> int:
        '''我太难了，根据自己练题总结的递归技巧，如果嫌我太菜不要喷

写出结束条件
不要把树复杂化，就当做树是三个节点，根节点，左子节点，右子节点
只考虑当前做什么，不用考虑下次应该做什么
每次调用应该返回什么
public int minDepth(TreeNode root) {
        if(root==null)
            return 0;
        if(root.left==null && root.right==null)
            return 1;
        if(root.left!=null && root.right!=null)
            return Math.min(minDepth(root.left),minDepth(root.right))+1;
        if(root.left!=null)
            return minDepth(root.left)+1;
        if(root.right!=null)
            return minDepth(root.right)+1;
        return 1;
    }
      '''

        if not root:
            return 0
        
        if not root.left and not root.right:
            return 1
        
        min_depth = 10**9
        if root.left:
            min_depth = min(self.minDepth(root.left), min_depth)
        if root.right:
            min_depth = min(self.minDepth(root.right), min_depth)
        
        return min_depth + 1

'''链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/solution/er-cha-shu-de-zui-xiao-shen-du-by-leetcode-solutio/'''
